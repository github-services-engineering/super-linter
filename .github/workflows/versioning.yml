---
name: Git tag Update

on:
  release:
    types: [published, edited]

permissions:
  contents: read

jobs:
  actions-tagger:
    permissions:
      contents: write  # To create or update a "major version" and a "latest" Git tags
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3

      - id: version
        name: Get major version
        run: |
          echo "GIT_TAG=${GITHUB_REF/refs\/tags\//}" >> "${GITHUB_ENV}"
          echo "SEMVER_VERSION=${GIT_TAG#v}" >> "${GITHUB_ENV}"
          echo "SEMVER_MAJOR_VERSION=${SEMVER_VERSION%%.*}" >> "${GITHUB_ENV}"
          echo "SEMVER_MAJOR_VERSION_WITH_PREFIX=v${SEMVER_MAJOR_VERSION}" >> "${GITHUB_ENV}"

      # We use ^{} to recursively deference the tag to get the commit the tag is pointing at.
      # Then, we use that reference to create new tags, so that the new tags point to the commit
      # the original tag was pointing to, and not to the original tag.
      # This notation is documented at https://git-scm.com/docs/gitrevisions#Documentation/gitrevisions.txt-emltrevgtemegemv0998em
      - name: Update the major version and latest tags
        run: |
          git tag --force "${SEMVER_MAJOR_VERSION_WITH_PREFIX}" "${GIT_TAG}^{}"
          git tag --force latest "${GIT_TAG}^{}"
          git push --force origin "refs/tags/${SEMVER_MAJOR_VERSION_WITH_PREFIX}" "refs/tags/latest"
