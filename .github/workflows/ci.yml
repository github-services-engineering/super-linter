name: Build and Test

on:
  pull_request:
  merge_group:
  workflow_dispatch:

jobs:
  test:
    name: Build and Test
    runs-on: ubuntu-latest
    permissions:
        contents: read
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.images.target }}
      cancel-in-progress: true
    strategy:
      fail-fast: false
      matrix:
        images:
          - prefix: slim-
            target: slim
          - prefix: ""
            target: standard
    timeout-minutes: 60
    env:
      CONTAINER_IMAGE_ID: "ghcr.io/super-linter/super-linter:${{ matrix.images.prefix }}latest"
      CONTAINER_IMAGE_TARGET: "${{ matrix.images.target }}"
    steps:
      - name: Free Disk space
        shell: bash
        run: |
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /usr/share/dotnet

      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Update action.yml
        run: |
          echo "yq version: $(yq --version)"
          yq '.runs.image = env(CONTAINER_IMAGE_ID)' -i action.yml
          echo "Action file contents:"
          cat action.yml

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set build revision and build version
        run: |
          if [[ ${{ github.event_name }} == 'push' ]]; then
            echo "BUILD_REVISION=${{ github.sha }}" >> $GITHUB_ENV
            echo "BUILD_VERSION=${{ github.sha }}" >> $GITHUB_ENV
          elif [[ ${{ github.event_name }} == 'pull_request' ]]; then
            echo "BUILD_REVISION=${{ github.event.workflow_run.head_sha }}" >> $GITHUB_ENV
            echo "BUILD_VERSION=${{ github.event.workflow_run.head_sha }}" >> $GITHUB_ENV
          else
            echo "Event not supported when setting build revision and build version"
            exit 1
          fi

      - name: Build Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          build-args: |
            BUILD_REVISION=${{ env.BUILD_REVISION }}
            BUILD_VERSION=${{ env.BUILD_VERSION }}
          load: true
          push: false
          secrets: |
            GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
          tags: |
            ${{ env.CONTAINER_IMAGE_ID }}
          target: "${{ matrix.images.target }}"

      - name: Test Local Action
        uses: ./
        env:
          ACTIONS_RUNNER_DEBUG: true
          CREATE_LOG_FILE: true
          ERROR_ON_MISSING_EXEC_BIT: true
          VALIDATE_ALL_CODEBASE: false
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BRANCH: main
          RENOVATE_SHAREABLE_CONFIG_PRESET_FILE_NAMES: "default.json,hoge.json"
          TYPESCRIPT_STANDARD_TSCONFIG_FILE: ".github/linters/tsconfig.json"

      - name: Get the contents of the log file
        run: |
          sudo cat super-linter.log
          sudo rm -v super-linter.log

      - name: Run Test Suite
        run: make test

      - name: Run Super-Linter Tests
        run: |
          docker run \
          -e RUN_LOCAL=true \
          -e TEST_CASE_RUN=true \
          -e ANSIBLE_DIRECTORY=.automation/test/ansible \
          -e ACTIONS_RUNNER_DEBUG=true \
          -e RENOVATE_SHAREABLE_CONFIG_PRESET_FILE_NAMES="default.json,hoge.json" \
          -e ERROR_ON_MISSING_EXEC_BIT=true \
          -e TYPESCRIPT_STANDARD_TSCONFIG_FILE=".github/linters/tsconfig.json" \
          -v "${GITHUB_WORKSPACE}:/tmp/lint" \
          "${CONTAINER_IMAGE_ID}"

      - name: Lint Entire Codebase
        run: |
          docker run \
          -e RUN_LOCAL=true \
          -e ACTIONS_RUNNER_DEBUG=true \
          -e RENOVATE_SHAREABLE_CONFIG_PRESET_FILE_NAMES="default.json,hoge.json" \
          -e ERROR_ON_MISSING_EXEC_BIT=true \
          -v "${GITHUB_WORKSPACE}:/tmp/lint" \
          "${CONTAINER_IMAGE_ID}"
