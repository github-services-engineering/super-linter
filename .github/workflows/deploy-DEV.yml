---
#########################
#########################
## Deploy Docker Image ##
#########################
#########################

#
# Documentation:
# https://help.github.com/en/articles/workflow-syntax-for-github-actions
#

#######################################
# Start the job on all push to master #
#######################################
#############################
# Start the job on all push #
#############################
on:
  push:
    branches-ignore: [master]
  pull_request:
    branches-ignore: []

###############
# Set the Job #
###############
jobs:
  build:
    # Name the Job
    name: Deploy Docker Image - DEV
    # Set the agent to run on
    runs-on: ubuntu-latest
    # Prevent duplicate run from happening when a forked push is committed
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    ##################
    # Load all steps #
    ##################
    steps:
      ##########################
      # Checkout the code base #
      ##########################
      - name: Checkout Code
        uses: actions/checkout@v2.3.3

      ########################
      # Get the current date #
      ########################
      - name: Get current date
        run: echo "::set-env name=BUILD_DATE::$(date -u +'%Y-%m-%dT%H:%M:%SZ')"

      ###################################
      # Build image locally for testing #
      ###################################
      - name: Build image
        shell: bash
        run: docker build --build-arg "BUILD_DATE=${BUILD_DATE}" --build-arg "BUILD_REVISION=${GITHUB_SHA}" --build-arg "BUILD_VERSION=${GITHUB_SHA}" --no-cache -t github/super-linter:${GITHUB_SHA} .

      ########################################
      # Validates the metadata docker labels #
      ########################################
      - name: Run Docker label test cases
        shell: bash
        run: .automation/validate-docker-labels.sh

      #####################################
      # Run Linter against Test code base #
      #####################################
      - name: Run Test Cases
        shell: bash
        run: |
          export CI_ENV="$(bash <(curl -s https://codecov.io/env)) -e GITHUB_ACTIONS"
          echo "CI_ENV=${CI_ENV}"
          docker run $CI_ENV -e TEST_CASE_RUN=true -e OUTPUT_FORMAT=tap -e OUTPUT_FOLDER=${GITHUB_SHA} -e OUTPUT_DETAILS=detailed -v ${GITHUB_WORKSPACE}:/tmp/lint github/super-linter:${GITHUB_SHA}

      #####################################
      # Run Linter against ALL code base  #
      #####################################
      - name: Run against all code base
        shell: bash
        run: docker run -e OUTPUT_DETAILS=detailed -e FILTER_REGEX_EXCLUDE='(\.automation\/test\/)' -e DISABLE_LINTERS="BASH_EXEC,BASH_SHFMT,PYTHON_BLACK,DOCKERFILE_HADOLINT" -e GITHUB_REPOSITORY="${{github.repository}}" -e GITHUB_SHA="${{github.sha}}" -e GITHUB_TOKEN="${{github.token}}" -e GITHUB_RUN_ID="${{github.run_id}}" -v ${GITHUB_WORKSPACE}:/tmp/lint github/super-linter:${GITHUB_SHA}
